#+TITLE: Missing Function Label Access Control
#+AUTHOR: [[https://github.com/touhidulshawan][Touhidul Shawan]]
#+DESCRIPTION: description
#+DATE: 2023-10-07 Sat
#+OPTIONS: toc:2

* Table of Contents :toc:
- [[#finding-hidden-item][Finding Hidden Item]]
  - [[#goal][Goal]]
  - [[#solution][Solution]]
- [[#gathering-user-info][Gathering User Info]]
- [[#the-company-fixed-the-problem-right][The company fixed the problem, right?]]

* Finding Hidden Item
** Goal
- Find two invisible menu items
** Solution
+ Inspect the attack-container with browser console
+ Look there is hidden =li= component named =Admin=. Remove the =hidden-menu-item= class & see that on webpage it is showing =Admin= dropdown menu with two item =Users=, =Config=
* Gathering User Info
From previous we get two endpoint =users= & =config=. Now visit these two endpoint and see what happen. From burp repeater send request and observe the response
- =/WebGoat/access-control/users= give 500 internal server error. There is no content-type in the request body add =Content-type: application-json= and send the request. It gives response with all users & their hashes. Copy the Jerry's hash value and submit to solve the lab
* The company fixed the problem, right?
run this java code to get hash value
#+begin_src java
  import java.nio.charset.StandardCharsets;
  import java.security.MessageDigest;
  import java.security.NoSuchAlgorithmException;
  import java.util.Base64;

  public class Main{
      public static void main(String[] args){
          // SVtOlaa+ER+w2eoIIVE5/77umvhcsh5V8UyDLUa1Itg=
        
          String password = "doesnotreallymatter";
          String username = "Jerry";
          String passwordSaltWeak = "DeliberatelyInsecure1234";
          String passwordSaltStrong = "DeliberatelyInsecure1235";

          try{
              MessageDigest md = MessageDigest.getInstance("SHA-256");
              String salted = password + passwordSaltStrong + username;
              byte[] hash = md.digest(salted.getBytes(StandardCharsets.UTF_8));
              System.out.println(Base64.getEncoder().encodeToString(hash));
          }catch(Error e){

          } catch (NoSuchAlgorithmException e) {
              throw new RuntimeException(e);
          }
      }
  } 
#+end_src
